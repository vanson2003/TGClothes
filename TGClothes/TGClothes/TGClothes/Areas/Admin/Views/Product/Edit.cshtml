@model TGClothes.Models.ProductModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var categories = ViewBag.CategoryId;
    var sizes = ViewBag.Sizes;
    var childCategory = Model.Product.CategoryId;
}

@section header{
    Chỉnh sửa sản phẩm
}

@{
    var sizesJson = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Sizes);
}

@section CustomJs{
    <script>
        //Cho phep nguoi dung mo ckfinder chon hinh anh va gan duong dan anh vao input
        $('#btnSelectImage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage').val(url);
            };
            finder.popup();
        })

        $('#btnSelectImage1').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage1').val(url);
            };
            finder.popup();
        })

        $('#btnSelectImage2').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage2').val(url);
            };
            finder.popup();
        })

        $('#btnSelectImage3').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage3').val(url);
            };
            finder.popup();
        })

        var editor = CKEDITOR.replace('txtContent', {
            customConfig: '/Assets/Admin/plugin/ckeditor/config.js',
        });
    </script>

    <script>
        var editor = CKEDITOR.replace('inputDetails', {
            customConfig: '/Assets/Admin/plugin/ckeditor/config.js'
        });
    </script>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Product.Id)
    <div class="form-group row">
        <div class="col-md-6">
            Tên sản phẩm
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
            </div>
            <br />
            Mô tả
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Product.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
            </div>
            <br />
            <div class="col-md-4">
                <label for="childCategoryDropdown">Danh mục:</label>
                @Html.DropDownListFor(model => model.Product.CategoryId, (SelectList)categories, "Select a category", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            Hình đại diện
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Product.Image, new { htmlAttributes = new { @class = "form-control", @id = "txtImage" }, id = "txtImage" })
                <a id="btnSelectImage" href="#">Chọn ảnh</a>
                @Html.ValidationMessageFor(model => model.Product.Image, "", new { @class = "text-danger" })
            </div>
            <br />
            Thư viện ảnh 1
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Gallery.Image1, new { htmlAttributes = new { @class = "form-control", @id = "txtImage" }, id = "txtImage1" })
                <a id="btnSelectImage1" href="#">Chọn ảnh</a>
                @Html.ValidationMessageFor(model => model.Gallery.Image1, "", new { @class = "text-danger" })
            </div>
            <br />
            Thư viện ảnh 2
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Gallery.Image2, new { htmlAttributes = new { @class = "form-control", @id = "txtImage" }, id = "txtImage2" })
                <a id="btnSelectImage2" href="#">Chọn ảnh</a>
                @Html.ValidationMessageFor(model => model.Gallery.Image2, "", new { @class = "text-danger" })
            </div>
            <br />
            Thư viện ảnh 3
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Gallery.Image3, new { htmlAttributes = new { @class = "form-control", @id = "txtImage" }, id = "txtImage3" })
                <a id="btnSelectImage3" href="#">Chọn ảnh</a>
                @Html.ValidationMessageFor(model => model.Gallery.Image3, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        Chi tiết sản phẩm
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.TextAreaFor(model => model.Product.Details, new { htmlAttributes = new { @class = "form-control" }, id = "inputDetails" })
            @Html.ValidationMessageFor(model => model.Product.Details, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        Giá nhập
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Product.OriginalPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Product.OriginalPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        Giá bán
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Product.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        Khuyến mại
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Product.Promotion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Product.Promotion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        Size:
        @foreach (var size in Model.Sizes)
        {
            var productSize = Model.ProductSizes.FirstOrDefault(ps => ps.SizeId == size.Id);
            bool hasProductSize = (productSize != null);

            <label name="ProductSizes[@Model.Sizes.IndexOf(size)].SizeId">@size.Name</label>
            <input type="number" name="ProductSizes[@Model.Sizes.IndexOf(size)].SizeId" value="@size.Id" hidden />
            <input type="number" name="ProductSizes[@Model.Sizes.IndexOf(size)].Stock" value="@(hasProductSize ? productSize.Stock : 0)" />
        }
    </div>

    <div class="form-group">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 d-flex justify-content-end">
                <input type="submit" value="Cập nhật" class="btn btn-primary mr-2" />
                <a href="@Url.Action("Index", "Product")" class="btn btn-danger mr-2">Quay lại</a>
            </div>
        </div>
    </div>
</div>
}
